// $(() => {
    let sukses = 0, nulled = 0, gagal = 0, count_create = 0, logUsername, u_link, logPassword, logLink, lognewPassword, logBio, delay, choice, per, ioa, lowe, ire, kjf;
	const getCookieValue = (name) => (
		document.cookie.match('(^|;)\\s*' + name + '\\s*=\\s*([^;]+)')?.pop()
	)
	$('.pred').show();
	$('.kuki').hide();
	$('.showSelect').hide();
	$('select.igtools').attr('disabled', true);
	$('input.delayed').attr('disabled', true);
	$('input.canonical').attr('disabled', true);
	$('input.customimage').attr('disabled', true);
	$('input.websiteLink').attr('disabled', true);
	$('textarea.biograpfy').attr('disabled', true);
	$('textarea.uid').attr('disabled', true);
	$('textarea.commit').attr('disabled', true);
	document.querySelector(".changepict").addEventListener("change", readFile);
	function readFile() {
		if (!this.files || !this.files[0]) return;
		const FR = new FileReader();
		FR.addEventListener("load", function(evt) {
		  document.querySelector(".img_preview").src = evt.target.result;
		  document.querySelector("p.base64").textContent = evt.target.result;
		}); 
		FR.readAsDataURL(this.files[0]);
	}
	$(document).on('input', 'input.idusergen', function(){
		const iki = $(this).val();
		const check_id = ['instagmag', 'b-lovely', 'beamlove', 'parket', 'westangi', 'njokmule', 'wesayo', 'pekrendi', 'sheebony', 'igmom', 'igrock', 'mymomig'];
		if(check_id.some(v => iki.includes(v))){
			$('select.igtools').attr('disabled', false);
			$('input.delayed').attr('disabled', false);
			$('input.canonical').attr('disabled', false);
			$('input.customimage').attr('disabled', false);
			$('input.websiteLink').attr('disabled', false);
			$('textarea.biograpfy').attr('disabled', false);
			$('textarea.uid').attr('disabled', false);
			$('textarea.commit').attr('disabled', false);
		}else {
			alert('Informasi Salah Input Terkirim.');
			$('input.idusergen').val('');
			return false;
		}
	});
	$(document).on('input', 'textarea.uid', function() {
		let hitunghasil = $(this).val(), lines = hitunghasil.split('\n');
		hitung = lines.length;
		$('.jumlah').text(hitung);
	});
	$(document).on('input', 'textarea.commit', function() {
		let jumlahPassword = $(this).val(), words = jumlahPassword.split('\n');
		getPass = words.length;
		$('.lab_pass').text('Total Password : ' + getPass);
	});
	setTimeout(function(){
		$.ajax({
			url: '/profile',
			type: 'get',
			beforeSend: function() {
				$('.consolelog').text('Please Waiting.. Fetch Account');
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			}
		}).done((ii)=>{
			let userprofile = ii.htc_x.username,
			userfullname = ii.htc_x.full_name,
			userquote = ii.htc_x.biography,
			userlink = ii.htc_x.external_url,
			userfollowers = ii.htc_x.follower_count,
			userfollowing = ii.htc_x.following_count,
			postingan = ii.htc_x.media_count,
			user_id = ii.htc_x.pk,
			user_img = ii.baseimage;
			if(ii.htc_x.bio_links.length !== 0){
				link_active = ii.htc_x.bio_links[0].link_id,
				u_link = link_active;
			}else {
				u_link = '';
			}
			per = userfullname, ioa = userprofile, lowe = userquote, ire = userlink, kjf = getCookieValue('email_account') || undefined;
			$('.uidUser').text(user_id);
			$('.imagelow').attr('src', user_img);
			$('.img_preview').attr('src', user_img);
			$('.inusername').text(userprofile);
			$('.posting').text(postingan);
			$('.followers').text(userfollowers);
			$('.following').text(userfollowing);
			$('.realname').text(userfullname);
			$('.quote').text(userquote);
			$('.highlink').attr('href', userlink);
			$('.biolink').text(userlink);
			$('.consolelog').text('Sukses fetch account.');
		}).fail((xhr)=>{
			logfail = JSON.parse(xhr.responseText);
			if($.isEmptyObject(logfail.htc_x)){
				$('.consolelog').text('Cookie gagal load. coba reload ulang !');
			}
			capca = logfail.htc_x.message;
			$('.consolelog').text(capca);
		});
	}, 1000);
	$(document).on('change', 'select.igtools', function(){
		var inClass = $("option:selected", this), choose = this.value;
		$("[class*='sessionid'], [class*='follow'], [class*='likeuid'], [class*='commentuid'], [class*='dmpeople'], [class*='dmgroup'], [class*='create']").removeClass(function(i, v) {
			return (v.match(/sessionid|follow|likeuid|commentuid|dmpeople|dmgroup|create/g) || []).join('');
		});
		if (choose == "sessionid") {
			$('.kuki').show();
			$('.pred').hide();
			$('.showSelect').hide();
			inClass.addClass("sessionid");
		}
		if (choose == "follow") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			inClass.addClass("follow");
		}
		if (choose == "likeuid") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			inClass.addClass("likeuid");
		}
		if (choose == "commentuid") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			inClass.addClass("commentuid");
		}
		if (choose == "dmpeople") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').show();
			inClass.addClass("dmpeople");
		}
		if (choose == "dmgroup") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').show();
			inClass.addClass("dmgroup");
		}
		if (choose == "create") {
			$('.kuki').hide();
			$('.pred').show();
			$('.showSelect').hide();
			inClass.addClass("create");
		}
	});
	$(document).on('click', 'button.metu', function(){
		if(confirm('Njok Metu Temen Ta ?')){
			$.ajax({
				url: '/metu',
				type: 'get',
				beforeSend: function() {
					$('.consolelog').text('Enteni Seg Metu Account');
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				}
			}).done((ii)=>{
				if(ii.deleteCookie == 'sukses'){
					location.reload();
				}else {
					alert('Gagal Metu');
					return false;
				}
			})
		}
	});
	$(document).on('click', 'button.edit_profile', function(){
		$('input.fullname').val(per);
		$('input.usernameprofile').val(ioa);
		$('textarea.biograpfy').val(lowe);
		$('input.websiteLink').val(ire);
		$('input.ikiemail').val(kjf);
	});
	$(document).on('click', 'button.editaccount', function(){
		let fullaran = $('input.fullname').val(), fullusername = $('input.usernameprofile').val(), fullbio = $('textarea.biograpfy').val(), fulllink = $('input.websiteLink').val(), fullemail = $('input.ikiemail').val();
		if (!fullaran || fullaran < 1) {
			alert('Isi arane ?');
			return false;
		}
		if (!fullusername || fullusername < 1) {
			alert('Isi Username ?');
			return false;
		}
		if (!fullbio || fullbio < 1) {
			alert('Isi Bione ?');
			return false;
		}
		if (!fulllink || fulllink < 1) {
			alert('Isi Link e?');
			return false;
		}
		if (!fullemail || fullemail < 1) {
			alert('Isi Email e ?');
			return false;
		}

		$.ajax({
			url: '/editprofile',
			type: 'post',
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			},
			beforeSend: function() {
				$('button.editaccount').html('<span class="spinner-border spinner-border-sm"></span> Enteni Seg...');
			},
			data: {
				'linkid': u_link,
				'kata': fullbio,
				'link': fulllink
			}
		}).done(()=>{
			$('button.editaccount').html('<i class="fas fa-user-check"></i> TERSIMPAN');
			location.reload()
		}).fail((xhr)=>{
			logfail = JSON.parse(xhr.responseText);
			if($.isEmptyObject(logfail.htc_x)){
				$('.consolelog').text('Cookie gagal load. coba reload ulang !');
			}
			capchta = logfail.htc_x.message;
			$('.consolelog').text(capchta);
		});
	});
	$(document).on('click', 'button.uploadimage', function(){
		let buffered = $('.base64').text();
		$.ajax({
			url: '/upload',
			type: 'post',
			beforeSend: function() {
				$('button.uploadimage').html('<span class="spinner-border spinner-border-sm"></span> Enteni Seg...');
			},
			data: {
				buffer: buffered
			}
		}).done(()=>{
			console.log('sukses')
			location.reload()
		}).fail(()=>{
			alert("UPLOAD MASIH DALAM TAHAP PENGEMBANGAN")
			$('button.uploadimage').text('Upload Photo')
			$('button.close').click()
			return false;
		})
	});
	$(document).on('click', 'button.toolkit', function(){
		let uid = $('textarea.uid').val().split('\n'), koment = $('textarea.commit').val().split('\n'), delay = $('input.delayed').val(), inPass = $('textarea.uid').val(), createuser = $('input.create_account').val(), id_user_link = $('input.idusergen').val(), canonical_uri = $('input.canonical').val(), img_custom = $('input.customimage').val(),
		baseUrl = '/follow', likeUrl = '/like', commentUrl = '/comment', dmUrl = '/dm', create = '/create', dmGroup = '/dmgroup',
		chunk = $.trim(inPass).replace(/\s+/g, ','), array_chunk = chunk.split(','), dmgroupuid = chunkify(array_chunk);

		if(Number(delay) < 5){
			alert("DELAY MINIMAL 5");
			$('button.toolkit').text('tamper');
			return false;
		}

		if (!delay) delay = 1;
		delay = delay * 3000;
		$('button.toolkit').text('run');

		if ($('select.igtools').find('option.sessionid').length > 0){
			let initCookie = decodeURIComponent(getCookieValue('login_ig')).replace('j:', '');
			$('textarea.cookiesid').val(initCookie);
			$('button.toolkit').text('tamper');
			$('.consolelog').text('sukses Get Session cookie');
		}else if ($('select.igtools').find('option.follow').length > 0) {
			if (!uid || uid < 1) {
				alert('uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			$.each(uid, (i, v) => {
				let io = true, pwe = i == uid.length - 1;
				setTimeout(
					() => {
						if (pwe) {
							$.ajax({
								url: baseUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_follow': v,
								}
							}).done(
								(ut) => {
									sukses++;
									$('span.sukses').text(sukses);
									$('.consolelog').text('Wes Entek');
									$('button.toolkit').text('tamper');
									timeLine();
								}).fail(
								(xhr) => {
									let logfail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									$('button.toolkit').text('tamper');
									if($.isEmptyObject(logfail.htc_x)){
										$('.consolelog').text('Wes Entek');
									}else {
										$('.consolelog').text(logfail.htc_x.message);
									}
							});
						} else {
							$.ajax({
								url: baseUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_follow': v,
								}
							}).done(
								(ut) => {
									sukses++;
									$('span.sukses').text(sukses);
									$('.consolelog').text('sukses follow');
							}).fail(
								(xhr) => {
									let logfail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									if($.isEmptyObject(logfail.htc_x)){
										$('.consolelog').text('Limit Follow');
									}else {
										$('.consolelog').text(logfail.htc_x.message);
									}
							});
						}
				}, (i + 1) * delay);
				if (pwe) {
					io = false;
					return false;
				}
				return io;
			});
		} else if ($('select.igtools').find('option.likeuid').length > 0){
			if (!uid || uid < 1) {
				alert('uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			$.each(uid, (i, v) => {
				let io = true, pwe = i == uid.length - 1;
				setTimeout(
					() => {
						if (pwe) {
							$.ajax({
								url: likeUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_like': v,
								}
							}).done(
								(ut) => {
									isOk = ut.htc_x;
									$('button.toolkit').text('tamper');
									$('.consolelog').text('Wes Entek');
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
									}else {
										nulled++;
										$('span.nulled').text(nulled);
									}
									timeLine();
								}).fail(
								(xhr) => {
									let logfail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									$('button.toolkit').text('tamper');
									if($.isEmptyObject(logfail.htc_x)){
										$('.consolelog').text('Wes Entek');
									}else {
										$('.consolelog').text(logfail.htc_x.message);
									}
							});
						} else {
							$.ajax({
								url: likeUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_like': v,
								}
							}).done(
								(ut) => {
									isOk = ut.htc_x;
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
										$('.consolelog').text('sukses like');
									}else {
										nulled++;
										$('span.nulled').text(nulled);
										$('.consolelog').text('Gak Duwe Photo');
									}
							}).fail(
								(xhr) => {
									let logfail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									if($.isEmptyObject(logfail.htc_x)){
										$('.consolelog').text('Limit Like');
									}else {
										$('.consolelog').text(logfail.htc_x.message);
									}
							});
						}
				}, (i + 1) * delay);
				if (pwe) {
					io = false;
					return false;
				}
				return io;
			});
		} else if ($('select.igtools').find('option.commentuid').length > 0) {
			if (!uid || uid < 1) {
				alert('Uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			if (!koment || koment < 1) {
				alert('Comment Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			$.each(uid, (i, v) => {
				let io = true, pwe = i == uid.length - 1;
				setTimeout(
					() => {
						let tte = Math.floor(Math.random() * koment.length), rand_comment = koment[tte];
						if (pwe) {
							$.ajax({
								url: commentUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_comment': v,
									'comment': rand_comment
								}
							}).done(
								(ut) => {
									isOk = ut.htc_x;
									$('button.toolkit').text('tamper');
									$('.consolelog').text('Wes Entek');
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
									}else {
										nulled++;
										$('span.nulled').text(nulled);
									}
									timeLine();
								}).fail(
								(xhr) => {
									let logfail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									$('button.toolkit').text('tamper');
									if($.isEmptyObject(logfail.htc_x)){
										$('.consolelog').text('Wes Entek');
									}else {
										$('.consolelog').text(logfail.htc_x.message);
									}
							});
						} else {
							$.ajax({
								url: commentUrl,
								type: 'post',
								beforeSend: function() {
									$('.consolelog').text('Get Uid : ' + v);
								},
								headers: {
									'content-type': 'application/x-www-form-urlencoded'
								},
								data: {
									'uid_comment': v,
									'comment': rand_comment
								}
							}).done(
								(ut) => {
									isOk = ut.htc_x;
									if(isOk !== 'private'){
										sukses++;
										$('span.sukses').text(sukses);
										$('.consolelog').text('sukses comment');
									}else {
										nulled++;
										$('span.nulled').text(nulled);
										$('.consolelog').text('Gak Duwe Photo');
									}
							}).fail(
								(xhr) => {
									let logfail = JSON.parse(xhr.responseText);
									gagal++;
									$('span.gagal').text(gagal);
									if($.isEmptyObject(logfail.htc_x)){
										$('.consolelog').text('Limit Comment');
									}else {
										$('.consolelog').text(logfail.htc_x.message);
									}
							});
						}
				}, (i + 1) * delay);
				if (pwe) {
					io = false;
					return false;
				}
				return io;
			});
		}else if ($('select.igtools').find('option.dmpeople').length > 0){
			if (!$("input[name='radioInline']:checked").val()) {
                alert('Pok Pileh Disek DM Opo ?');
				$('button.toolkit').text('tamper');
                return false;
            }

			if (!uid || uid < 1) {
				alert('Uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}

			if (!koment || koment < 1) {
				alert('Key Live Atau Text Custom Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}

			let choice = $("input[name='radioInline']:checked").val();

			if(choice === 'sendDMtext'){
				$.each(uid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(
						() => {
							let tte = Math.floor(Math.random() * koment.length), choosetext = koment[tte];
							if (pwe) {
								branchBuildtext(1, choosetext, dmUrl, v);
								timeLine();
							} else {
								branchBuildtext(0, choosetext, dmUrl, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}else {
				if (!id_user_link || id_user_link < 1) {
					alert('Gen Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}

				if (!canonical_uri || canonical_uri < 1) {
					alert('Custom Canonical Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}
	
				if (!img_custom || img_custom < 1) {
					alert('Image Custom Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}

				$.each(uid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(
						() => {
							let tte = Math.floor(Math.random() * koment.length), keyLiveOrComment = koment[tte];
							if (pwe) {
								branchBuild(keyLiveOrComment, canonical_uri, id_user_link, id_user_link, 'Hot Tiktok Profile Nude Live Now', 'See Live Tiktok Adult Nude For Free. Just Make Sure U Create Ur Free Profile', img_custom, 1, dmUrl, v);
								timeLine();
							} else {
								branchBuild(keyLiveOrComment, canonical_uri, id_user_link, id_user_link, 'Hot Tiktok Profile Nude Live Now', 'See Live Tiktok Adult Nude For Free. Just Make Sure U Create Ur Free Profile', img_custom, 0, dmUrl, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}
		}else if ($('select.igtools').find('option.dmgroup').length > 0){
			if (!$("input[name='radioInline']:checked").val()) {
                alert('Pok Pileh Disek DM Opo ?');
				$('button.toolkit').text('tamper');
                return false;
            }

			if (!uid || uid < 1) {
				alert('Uid Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}

			if (!koment || koment < 1) {
				alert('Key Live Atau Text Custom Pok Isi !');
				$('button.toolkit').text('tamper');
				return false;
			}
			
			let choice = $("input[name='radioInline']:checked").val();

			if(choice === 'sendDMtext'){
				$.each(dmgroupuid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(
						() => {
							let tte = Math.floor(Math.random() * koment.length), choosetext = koment[tte];
							if (pwe) {
								branchBuildgrouptext(1, choosetext, dmGroup, v);
								timeLine();
							} else {
								branchBuildgrouptext(0, choosetext, dmGroup, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}else {
				if (!id_user_link || id_user_link < 1) {
					alert('Gen Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}

				if (!canonical_uri || canonical_uri < 1) {
					alert('Custom Canonical Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}
	
				if (!img_custom || img_custom < 1) {
					alert('Image Custom Url Pok Isi !');
					$('button.toolkit').text('tamper');
					return false;
				}

				$.each(dmgroupuid, (i, v) => {
					let io = true, pwe = i == uid.length - 1;
					setTimeout(
						() => {
							let tte = Math.floor(Math.random() * koment.length), keyLiveOrComment = koment[tte];
							if (pwe) {
								branchBuildGroup(keyLiveOrComment, canonical_uri, id_user_link, id_user_link, 'Hot Tiktok Profile Nude Live Now', 'See Live Tiktok Adult Nude For Free. Just Make Sure U Create Ur Free Profile', img_custom, 1, dmGroup, v);
								timeLine();
							} else {
								branchBuildGroup(keyLiveOrComment, canonical_uri, id_user_link, id_user_link, 'Hot Tiktok Profile Nude Live Now', 'See Live Tiktok Adult Nude For Free. Just Make Sure U Create Ur Free Profile', img_custom, 0, dmGroup, v);
							}
					}, (i + 1) * delay);
					if (pwe) {
						io = false;
						return false;
					}
					return io;
				});
			}
		}else if ($('select.igtools').find('option.create').length > 0){

			if (!inPass || inPass < 1) {
				alert('Password Isi 1 !');
				$('button.toolkit').text('tamper');
				return false;
			}

			if (!createuser || createuser < 1) {
				alert('Njok Pirang Account ?');
				$('button.toolkit').text('tamper');
				return false;
			}

			Gawe(inPass)

			function Gawe(SomePassword){
				count_create++;
				if(count_create == Number(createuser)){
					$('.consolelog').text('Wes Limit Gawe, Gak Ke Akeh');
					$('button.toolkit').text('tamper');
					return false;
				}
				$.ajax({
					url: create,
					type: 'post',
					beforeSend: function() {
						$('.consolelog').text('Enteni ... Start Create Account.');
					},
					headers: {
						'content-type': 'application/x-www-form-urlencoded'
					},
					data: {
						'password': SomePassword
					}
				}).done(()=>{
					sukses++;
					$('span.sukses').text(sukses);
					$('.consolelog').text('sukses Create Account');
					Gawe(SomePassword)
				}).fail(()=> {
					gagal++;
					$('span.gagal').text(gagal);
					$('.consolelog').text('Gagal Create Account');
					Gawe(SomePassword)
				})
			}
		}else {
			alert('Pilih Opsi Tools Dulu !');
			$('button.toolkit').text('tamper');
			return false;
		}
	});

	function timeLine(){
		setTimeout(()=>{
			$.ajax({
				url: '/timeline',
				type: 'get',
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				}
			}).done(()=>{
				$('.consolelog').text('Wes Entek Dan Sukses Load Timeline IG').css('color', 'green');
			}).fail(()=>{
				$('.consolelog').text('Wes Entek Dan Gagal Load Timeline IG').css('color', 'red');
			});
		}, 2000)
	}

	function branchBuildtext(ended, customtext, baseUrl, uid){
		if(ended === 1){
			$('button.toolkit').text('tamper');
			$('.consolelog').text('Wes Entek');
		}

		$.ajax({
			url: baseUrl,
			type: 'post',
			beforeSend: function() {
				$('.consolelog').text('Get Uid : ' + uid);
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			},
			data: {
				'uid_dm': uid,
				'text': customtext
			}
		}).done(
			(ut) => {
				sukses++;
				$('span.sukses').text(sukses);
				$('.consolelog').text('sukses dm');
		}).fail(
			(xhr) => {
				let logfail = JSON.parse(xhr.responseText);
				gagal++;
				$('span.gagal').text(gagal);
				if($.isEmptyObject(logfail.htc_x)){
					$('.consolelog').text('Gagal DM Karena Limitation Dari IG atau Uid tidak ada/nonactive');
				}else {
					$('.consolelog').text(logfail.htc_x.message);
				}
		});
	}

	function branchBuildgrouptext(ended, customtext, baseUrl, uid){
		if(ended === 1){
			$('button.toolkit').text('tamper');
			$('.consolelog').text('Wes Entek');
		}

		$.ajax({
			url: baseUrl,
			type: 'post',
			beforeSend: function() {
				$('.consolelog').text('Get uid array group');
			},
			headers: {
				'content-type': 'application/x-www-form-urlencoded'
			},
			data: {
				'uid_dmgroup': JSON.stringify(uid),
				'text': customtext
			}
		}).done(
			(ut) => {
				sukses++;
				$('span.sukses').text(sukses);
				$('.consolelog').text('sukses dm');
		}).fail(
			(xhr) => {
				let logfail = JSON.parse(xhr.responseText);
				gagal++;
				$('span.gagal').text(gagal);
				if($.isEmptyObject(logfail.htc_x)){
					$('.consolelog').text('gagal membuat group atau ada uid yg reject add group atau link spam atau server error atau client_context tidak valid.');
				}else {
					$('.consolelog').text(logfail.htc_x.message);
				}
		});
	}

	function branchBuild(key_live, web_url, ios, android, title, description, image, last_xhr, baseUrl, uid){
		if(last_xhr === 1){
			$('button.toolkit').text('tamper');
			$('.consolelog').text('Wes Entek');
		}

		$.ajax({
			url: 'https://api2.branch.io/v1/url',
			type: 'post',
			headers: {
				'content-type': 'application/json; charset=utf-8'
			},
			beforeSend: function() {
				$('.consolelog').text('Build Branch');
			},
			data: JSON.stringify({
				branch_key: key_live,
				data: {
					$desktop_url: web_url,
					$ios_url: ios,
					$android_url: android,
					$og_title: title,
					$og_description: description,
					$og_image_url: image
				}
			})
		}).done((bnc) => {
			BranchUri = bnc.url;
			$.ajax({
				url: baseUrl,
				type: 'post',
				beforeSend: function() {
					$('.consolelog').text('Get Uid : ' + uid);
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				},
				data: {
					'uid_dm': uid,
					'linked': BranchUri
				}
			}).done(
				(ut) => {
					sukses++;
					$('span.sukses').text(sukses);
					$('.consolelog').text('sukses dm');
			}).fail(
				(xhr) => {
					let logfail = JSON.parse(xhr.responseText);
					gagal++;
					$('span.gagal').text(gagal);
					if($.isEmptyObject(logfail.htc_x)){
						$('.consolelog').text('Gagal DM Karena Limitation Dari IG atau Uid tidak ada/nonactive');
					}else {
						$('.consolelog').text(logfail.htc_x.message);
					}
			});
		}).fail(()=>{
			$('.consolelog').text('Gagal Gawe Branch Url');
		})
	}

	function branchBuildGroup(key_live, web_url, ios, android, title, description, image, last_xhr, baseUrl, uid){
		if(last_xhr === 1){
			$('button.toolkit').text('tamper');
			$('.consolelog').text('Wes Entek');
		}

		$.ajax({
			url: 'https://api2.branch.io/v1/url',
			type: 'post',
			headers: {
				'content-type': 'application/json; charset=utf-8'
			},
			beforeSend: function() {
				$('.consolelog').text('Build Branch');
			},
			data: JSON.stringify({
				branch_key: key_live,
				data: {
					$desktop_url: web_url,
					$ios_url: ios,
					$android_url: android,
					$og_title: title,
					$og_description: description,
					$og_image_url: image
				}
			})
		}).done((bnc)=>{
			BranchUri = bnc.url;
			$.ajax({
				url: baseUrl,
				type: 'post',
				beforeSend: function() {
					$('.consolelog').text('Get uid array group');
				},
				headers: {
					'content-type': 'application/x-www-form-urlencoded'
				},
				data: {
					'uid_dmgroup': JSON.stringify(uid),
					'linked': BranchUri
				}
			}).done(
				(ut) => {
					sukses++;
					$('span.sukses').text(sukses);
					$('.consolelog').text('sukses dm');
			}).fail(
				(xhr) => {
					let logfail = JSON.parse(xhr.responseText);
					gagal++;
					$('span.gagal').text(gagal);
					if($.isEmptyObject(logfail.htc_x)){
						$('.consolelog').text('gagal membuat group atau ada uid yg reject add group atau link spam atau server error atau client_context tidak valid.');
					}else {
						$('.consolelog').text(logfail.htc_x.message);
					}
			});
		}).fail(()=>{
			$('.consolelog').text('Gagal Gawe Branch Url');
		})
	}

	function chunkify(array, chunkSize = 15) {
		const chunks = Array.from({
				length: Math.ceil(array.length / chunkSize)
			},
			(_, i) => {
				const start = chunkSize * i;
				return array.slice(start, start + chunkSize);
			}
		);
		return chunks;
	}

// });